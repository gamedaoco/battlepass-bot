services:

#
# DATABASES
#

  db:
    image: postgres:12-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASS}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - .tmp/postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER

  # admin:
  #   image: adminer
  #   restart: always
  #   ports:
  #     - 8082:8080

  redis:
    image: redis:7-alpine
    ports:
      - 6379:6379
    command: redis-server --save 60 1 --loglevel warning
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - .tmp/redis/data:/data
      - .tmp/redis/redis:/var/lib/redis
      - .tmp/redis/config:/usr/local/etc/redis/redis.conf
    healthcheck:
      test: [ CMD, redis-cli, --raw, incr, ping ]

#
# CORE SERVICES
#

  graph:
    restart: always
    image: ${DOCKER_IMAGE}
    command:
      - npm
      - run-script
      - graph
    environment:
      LOGGING_LEVEL: ${LOGGING_LEVEL}
      DATABASE_URL: ${DATABASE_URL}
      GRAPH_API_PORT:  ${GRAPH_API_PORT}
      GRAPH_API_SECRET_KEY: ${GRAPH_API_SECRET_KEY}
      GRAPH_API_GRAPHQL_UI: ${GRAPH_API_GRAPHQL_UI}
      GRAPH_API_SECURITY_TOKEN: ${GRAPH_API_SECURITY_TOKEN}
    # links:
    #   - db
    #   - redis
    ports:
      - 8080:8080
    depends_on:
      - db

  chain:
    restart: always
    image: ${DOCKER_IMAGE}
    command:
      - npm
      - run-script
      - chain
    environment:
      LOGGING_LEVEL: ${LOGGING_LEVEL}
      DATABASE_URL: ${DATABASE_URL}
      PUBLIC_GRAPH_URL: ${PUBLIC_GRAPH_URL}
      CHAIN_RPC_URL: ${CHAIN_RPC_URL}
      CHAIN_ACCOUNT: ${CHAIN_ACCOUNT}
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT}
    depends_on:
      - db
      - graph
      - redis

  service:
    restart: always
    image: ${DOCKER_IMAGE}
    command:
      - npm
      - run-script
      - service
    environment:
      LOGGING_LEVEL: ${LOGGING_LEVEL}
      DATABASE_URL: ${DATABASE_URL}
    links:
      - db
    depends_on:
      - db
      - graph

#
# AGGREGATOR SERVICES
#

  discord:
    restart: always
    image: ${DOCKER_IMAGE}
    command:
      - npm
      - run-script
      - discord
    environment:
      LOGGING_LEVEL: ${LOGGING_LEVEL}
      DATABASE_URL: ${DATABASE_URL}
      DISCORD_BOT_KEY: ${DISCORD_BOT_KEY}
      DISCORD_FETCH_MESSAGES_SINCE: ${DISCORD_FETCH_MESSAGES_SINCE}
    links:
      - db
    depends_on:
      - db
      - graph
      - redis

  # twitter:
  #   restart: always
  #   image: ${DOCKER_IMAGE}
  #   command:
  #     - npm
  #     - run-script
  #     - twitter
  #   environment:
  #     LOGGING_LEVEL: ${LOGGING_LEVEL}
  #     DATABASE_URL: ${DATABASE_URL}
  #     TWITTER_BEARER_TOKEN: ${TWITTER_BEARER_TOKEN}
  #   links:
  #     - db
  #   depends_on:
  #     - db
  #     - graph
  #     - redis

  # epic-games:
  #   restart: always
  #   image: ${DOCKER_IMAGE}
  #   command:
  #     - npm
  #     - run-script
  #     - epicGames
  #   environment:
  #     LOGGING_LEVEL: ${LOGGING_LEVEL}
  #     DATABASE_URL: ${DATABASE_URL}
  #     EPIC_GAMES_DEPLOYMENT_ID: ${EPIC_GAMES_DEPLOYMENT_ID}
  #     EPIC_GAMES_CLIENT_ID: ${EPIC_GAMES_CLIENT_ID}
  #     EPIC_GAMES_CLIENT_SECRET: ${EPIC_GAMES_CLIENT_SECRET}
  #   links:
  #     - db
  #   depends_on:
  #     - db
  #     - graph
  #     - redis

networks:
  default:
    name: supernet
    external: true
