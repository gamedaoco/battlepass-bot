version: "3.7"
services:

  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_MULTIPLE_DATABASES: ${DB_DATABASES}
    ports:
      - 5432:5432
    volumes:
      - ./config/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - ./.tmp/db:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - 6379:6379
    command: redis-server --save 60 1 --loglevel warning

  api:
    image: battlepass-bot:local
    command:
      - npm
      - run-script
      - api
    environment:
      LOGGING_LEVEL: info
      DATABASE_URL: ${DATABASE_URL}
      API_PORT: 8080
    ports:
      - 8080:8080
    depends_on:
      - db

  discord:
    image: battlepass-bot:local
    command:
      - npm
      - run-script
      - discord
    environment:
      LOGGING_LEVEL: info
      DATABASE_URL: ${DATABASE_URL}
      DISCORD_BOT_KEY:
    depends_on:
      - db
      - api

  twitter:
    image: battlepass-bot:local
    command:
      - npm
      - run-script
      - twitter
    environment:
      LOGGING_LEVEL: info
      DATABASE_URL: ${DATABASE_URL}
      TWITTER_BEARER_TOKEN:
    depends_on:
      - db
      - api

  chain:
    image: battlepass-bot:local
    command:
      - npm
      - run-script
      - chain
    environment:
      LOGGING_LEVEL: info
      DATABASE_URL: ${DATABASE_URL}
      GRAPH_URL:
      CHAIN_RPC_URL:
    depends_on:
      - db
      - api

  aggregation:
    image: battlepass-bot:local
    command:
      - npm
      - run-script
      - service
    environment:
      LOGGING_LEVEL: info
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      - db
      - api

  epic-games:
    image: battlepass-bot:local
    command:
      - npm
      - run-script
      - epicGames
    environment:
      LOGGING_LEVEL: info
      DATABASE_URL: ${DATABASE_URL}
      EPIC_GAMES_DEPLOYMENT_ID:
      EPIC_GAMES_CLIENT_ID:
      EPIC_GAMES_CLIENT_SECRET:
    depends_on:
      - db
      - api
